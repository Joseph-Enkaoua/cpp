#include "ShrubberyCreationForm.hpp"

ShrubberyCreationForm::ShrubberyCreationForm() : AForm("Shrubbery", 145, 137) {
	_target = "undefined";
}

ShrubberyCreationForm::ShrubberyCreationForm(std::string target) : AForm("Shrubbery", 145, 137) {
	_target = target;
}

ShrubberyCreationForm::~ShrubberyCreationForm() {}

void	ShrubberyCreationForm::execute(Bureaucrat const & executor) const {
	try
	{
		checkBeforeExecute(executor);
		std::ofstream file;
		file.open(_target + "_shrubbery");
		file << "###########################'`################################\n\
	###########################  V##'############################\n\
	#########################V'  `V  ############################\n\
	########################V'      ,############################\n\
	#########`#############V      ,A###########################V'\n\
	########' `###########V      ,###########################V',#\n\
	######V'   ###########l      ,####################V~~~~'',###\n\
	#####V'    ###########l      ##P' ###########V~~'   ,A#######\n\
	#####l      d#########l      V'  ,#######V~'       A#########\n\
	#####l      ##########l         ,####V''         ,###########\n\
	#####l        `V######l        ,###V'   .....;A##############\n\
	#####A,         `######A,     ,##V' ,A#######################\n\
	#######A,        `######A,    #V'  A########'''''##########''\n\
	##########,,,       `####A,           `#''           '''  ,,,\n\
	#############A,                               ,,,     ,######\n\
	######################oooo,                 ;####, ,#########\n\
	##################P'                   A,   ;#####V##########\n\
	#####P'    ''''       ,###             `#,     `V############\n\
	##P'                ,d###;              ##,       `V#########\n\
	##########A,,   #########A              )##,    ##A,..,ooA###\n\
	#############A, Y#########A,            )####, ,#############\n\
	###############A ############A,        ,###### ##############\n\
	###############################       ,#######V##############\n\
	###############################      ,#######################\n\
	##############################P    ,d########################\n\
	##############################'    d#########################\n\
	##############################     ##########################\n\
	##############################     ##########################\n\
	#############################P     ##########################\n\
	#############################'     ##########################\n\
	############################P      ##########################\n\
	###########################P'     ;##########################\n\
	###########################'     ,###########################\n\
	##########################       ############################\n\
	#########################       ,############################\n\
	########################        d###########P'    `Y#########\n\
	#######################        ,############        #########\n\
	######################        ,#############        #########\n\
	#####################        ,##############b.    ,d#########\n\
	####################        ,################################\n\
	###################         #################################\n\
	##################          #######################P'  `V##P'\n\
	#######P'     `V#           ###################P'\n\
	#####P'                    ,#################P'\n\
	###P'                      d##############P''\n\
	##P'                       V##############'\n\
	#P'                         `V###########'\n\
	#'                             `V##P'" << std::endl;
	file.close();
	}
	catch(const std::exception& e)
	{
		std::cerr << e.what() << '\n';
	}
}
